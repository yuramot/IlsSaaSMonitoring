unit UFileStructures;
//------------------------------------------------------------------------------
// все файловые структуры собраны тут
//
// !!! ВАЖНО !!!
//  размер абсолютно всех файловых структур должен быть кратен 8 байт
//  добавляйте пустое поле в конце при необходимости
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
interface

uses
  UGeoPosition;

//------------------------------------------------------------------------------
type

//------------------------------------------------------------------------------
//! запись в файле графов "дороги"
//------------------------------------------------------------------------------
  PEdge = ^TEdge;

  TEdge = packed record
    //! гео-координаты начала дороги
    CoordsFrom: TGeoPosition; // 16
    //! гео-координаты конца дороги
    CoordsTo: TGeoPosition; // 32
    //! гео-хэш точки начала дороги
    HashFrom: Int64; // 40
    //! гео-хэш точки конца дороги
    HashTo: Int64; // 48
    //! смещение в файле списка исходящих дорог ".from"
    OutgoingOffset: Int64; // 56
    //! смещение в файле списка входящих дорог ".to"
    IncomingOffset: Int64; // 64
    //! количество исходящих дорог
    OutgoingCount: Integer; // 68
    //! количество входящих дорог
    IncomingCount: Integer; // 72
    //! смещение в файле промежуточных точек ".way" (-1 если их нет)
    WayOffset: Int64; // 80
    //! количество промежуточных точек (может быть 0)
    WayCount: Integer; // 84
    //! тип дороги
    RoadType: Integer; // 88
    //! длина дороги, километры
    Distance: Double; // 96
    //! стоимость проезда по дороге (время? в секундах??)
    Cost: Double; // 104
    //! пропуск для дороги
    Access: Integer; // 108
    //! максимальная скорость на дороге
    MaxSpeed: Integer; // 112
  end;

  TEdgeArray = TArray<TEdge>;

//------------------------------------------------------------------------------
//<<<<<<< HEAD
//! запись в файле графов "точки"
//------------------------------------------------------------------------------
  PHub = ^THub;

  THub = packed record
    //! гео-координаты
    Coords: TGeoPosition; // 16
    //! гео-хэш
    Hash: Int64; // 24
    //! список исходящих дорог = смещение в файле "список дорог"
    EdgesFromOffset: UInt64; // 32
    //! список входящих дорог = смещение в файле "список дорог"
    EdgesToOffset: UInt64; // 40
    //! кол-во исходящих дорог в файле "список дорог"
    EdgesFromCount: Integer; // 44
    //! кол-во входящих дорог в файле "список дорог"
    EdgesToCount: Integer; // 48
  end;
{    THub = packed record
    //! гео-координаты
    Coords: TGeoPosition; // 16
    //! список исходящих дорог = смещение в файле "список дорог"
    EdgesFromOffset: UInt64; // 24
    //! список входящих дорог = смещение в файле "список дорог"
    EdgesToOffset: UInt64; // 32
    //! кол-во исходящих дорог в файле "список дорог"
    EdgesFromCount: Integer; // 36
    //! кол-во входящих дорог в файле "список дорог"
    EdgesToCount: Integer; // 40
  end;}

  THubArray = TArray<THub>;

//------------------------------------------------------------------------------
//=======
//>>>>>>> 46e46db5ef6c043ae1665943612a4e11c7310f9a
//! запись в файле графов "список дорог"
//------------------------------------------------------------------------------
  PEdgeList = ^TEdgeList;

  TEdgeList = packed record
    //! хэш точки начала в файле "дороги" = выбор нужного файла
    EdgeHash: Int64; // 8
    //! смещение в файле "дороги"
    EdgeOffset: Int64; // 16
  end;

  TEdgeListArray = TArray<TEdgeList>;

//------------------------------------------------------------------------------
//! запись в файле графов "реальный путь дороги"
//------------------------------------------------------------------------------
  PWay = ^TWay;

  TWay = packed record
    //! гео-координаты точки
    Mark: TGeoPosition; // 16
  end;

  TWayArray = TArray<TWay>;

//------------------------------------------------------------------------------
implementation

end.

